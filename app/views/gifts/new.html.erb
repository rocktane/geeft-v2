  <div class="btn-back">
      <%= link_to '< Retour', :back %>
    </div>

<% model_to_use = [@event, @gift] || @gift %>


<%= simple_form_for(model_to_use, url: gifts_path(event_id: @event), class: "criteria-form") do |f| %>

  <div class="age-genre">
    <div class="form-group">
        <%= f.label :age, class: "criteria-title" %>
        <div class="input-group" style="display: flex">
          <div class="input-group-prepend">
            <button type="button" id="decrement" class="btn btn-outline-secondary">-</button>
          </div>
          <%= f.input :age, as: :hidden, input_html: { id: 'age_input_hidden' }, required: false %>
          <input type="text" id="age_input" value="30" readonly class="form-control text-center" />
          <div class="input-group-append">
            <button type="button" id="increment" class="btn btn-outline-secondary">+</button>
          </div>
        </div>
      </div>
    <%= f.label :genre, "Genre", class: "criteria-title" %>
    <%= f.radio_button :genre, "neutral" %>
    <%= f.label :genre, "neutral" %>
    <%= f.radio_button :genre, "female" %>
    <%= f.label :genre, "female" %>
    <%= f.radio_button :genre, "male" %>
    <%= f.label :genre, "male" %>
  </div>
  <div class="budget">
    <%= f.label :budget, "Budget", class: "criteria-title" %>
    <%= f.input :budget, as: :range, input_html: { id: 'budget-slider', min: 0, max: 500, step: 1, value: 50 } %>
    <div id="budget-value">50</div>
  </div>
  <div class="occasion">
    <%= f.label :occasion, "Occasion", class: "criteria-title" %>
    <%= f.input :occasion, collection: Gift::OCCASIONS.sort, as: :radio_buttons, required: false %>
  </div>
  <div class="relationship">
    <%= f.label :relationship, "Relation", class: "criteria-title" %>
    <%= f.input :relationship, collection: Gift::RELATIONSHIPS.sort, as: :radio_buttons, required: false %>
  </div>
  <div class="interests">
    <%= f.label :interests, "Centres d'intérêts", class: "criteria-title" %>
    <%= f.input :interests, collection: Gift::INTERESTS.sort, as: :check_boxes, required: false %>
  </div>
  <%= f.button :submit %>
<% end %>

<script>
  // À intégrer via Stimulus
  document.addEventListener("DOMContentLoaded", function() {
    const slider = document.getElementById('budget-slider');
    const output = document.getElementById('budget-value');

    update_pos = function() {
      const slider_element = slider.getBoundingClientRect();
      const output_element = output.getBoundingClientRect();
      const range = (slider_element.right - slider_element.left) / (slider.max - slider.min);
      const size = output_element.width;

      // Prendre en compte la largeur du 'bouton' du slider afin qu'il soit centré tout le temps
      const value_int = parseInt(slider.value);
      const middle = (slider.max - slider.min) / 2;

      // output.style.left = `${slider_element.left}px`;

      if (value_int < middle) {
        const value_pos = slider_element.left + ((value_int - slider.min) * range) + (size / 2);
        output.style.left = `${value_pos}px`
      } else if (value_int > middle) {
        const value_pos = slider_element.left + ((value_int - slider.min) * range) - size;
        output.style.left = `${value_pos}px`
      } else {
        const value_pos = slider_element.left + ((value_int - slider.min) * range);
        output.style.left = `${value_pos}px`
      }

      console.log(value_pos);

      // output.style.left = `${value_pos}px`;

      // Intégrer la hauteur dans le CSS
      output.style.top = `${slider_element.top - 20}px`;
    }

    slider.oninput = function() {
      output.innerHTML = this.value;
      update_pos();
    }

    update_pos();
  });

</script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
  const decrementButton = document.getElementById('decrement');
  const incrementButton = document.getElementById('increment');
  const ageInput = document.getElementById('age_input');
  const hiddenAgeField = document.querySelector('.age-spinner');

  decrementButton.addEventListener('click', function() {
    let age = parseInt(ageInput.value, 10);
    if (age > 0) {
      age -= 1;
      ageInput.value = age;
      hiddenAgeField.value = age;
    }
  });

  incrementButton.addEventListener('click', function() {
    let age = parseInt(ageInput.value, 10);
    age += 1;
    ageInput.value = age;
    hiddenAgeField.value = age;
  });
});

</script>
